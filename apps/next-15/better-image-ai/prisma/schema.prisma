generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(cuid()) @map("_id")
  dailyUsage DailyUsage? @relation("UserToDailyUsage")

  flows Flow[]
}

model DailyUsage {
  id        String   @id @default(cuid()) @map("_id")
  user      User?    @relation("UserToDailyUsage", fields: [userId], references: [id], onDelete: Cascade)
  userId    String?  @unique
  lastUsage DateTime
  count     Int
}

model Flow {
  id String @id @default(cuid()) @map("_id")

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  originalPrompt   String
  
  questions        Question[] @relation("FlowToQuestion")
  suggestedStyle   Question?  @relation("FlowToSuggestedStyle", fields: [suggestedStyleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  suggestedStyleId String?    @unique
}

model Question {
  id String @id @default(cuid()) @map("_id")

  flowId String
  flow   Flow   @relation("FlowToQuestion", fields: [flowId], references: [id], onDelete: Cascade)

  suggestedInFlow Flow?  @relation("FlowToSuggestedStyle")
  
  question        String
  placeholder     String
  answer String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
